{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erayt\\\\Documents\\\\GitHub\\\\kurs-kay-t\\\\frontend\\\\src\\\\components\\\\Auth\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\n// axios importuna artık ihtiyacımız yok.\n// AuthContext yerine localStorage kullanacağımız için onu da kaldırıyoruz.\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  // State'ler aynı kalıyor, bir de yükleme durumu ekleyelim\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false); // Kullanıcı deneyimi için\n  const navigate = useNavigate();\n\n  // loginUser fonksiyonuna artık ihtiyacımız yok.\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setLoading(true);\n    try {\n      // 1. ADIM: fetch ile isteği gönderiyoruz.\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/auth/login`, {\n        method: \"POST\",\n        // Metodun POST olduğunu belirtiyoruz.\n        headers: {\n          // Gönderdiğimiz verinin JSON olduğunu ve cevap olarak JSON beklediğimizi belirtiyoruz.\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        // Göndereceğimiz JavaScript objesini JSON string'ine çeviriyoruz.\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n\n      // 2. ADIM: Gelen cevabı JSON formatına çeviriyoruz.\n      const data = await response.json();\n\n      // 3. ADIM: Başarısız istekleri manuel olarak kontrol ediyoruz.\n      if (!response.ok) {\n        // Backend'den gelen 'error' mesajını alıp hata olarak fırlatıyoruz.\n        throw new Error(data.error || \"Bir şeyler ters gitti.\");\n      }\n\n      // 4. ADIM: Gelen cevabı bizim backend'in formatına göre işliyoruz.\n      const {\n        access_token,\n        user\n      } = data;\n\n      // 5. ADIM: Token'ı ve kullanıcıyı tarayıcı hafızasına (localStorage) kaydediyoruz.\n      localStorage.setItem(\"authToken\", access_token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n\n      // 6. ADIM: Kullanıcıyı rolüne göre doğru sayfaya yönlendiriyoruz.\n      // Bizim 'user' objemizde rol 'is_admin' (boolean) olarak tutuluyor.\n      if (user.is_admin) {\n        navigate(\"/admin\");\n      } else {\n        // Normal kullanıcıyı dersler sayfasına veya kendi paneline yönlendirebiliriz.\n        navigate(\"/courses\");\n      }\n    } catch (err) {\n      // Yukarıda fırlattığımız veya ağ hatası gibi başka bir hata olursa burada yakalanır.\n      setError(err.message || \"Giriş başarısız. Lütfen bilgilerinizi kontrol edin.\");\n      console.error(\"Giriş hatası:\", err);\n    } finally {\n      setLoading(false); // İstek bitince (başarılı veya başarısız) yükleme durumunu kapat.\n    }\n  };\n\n  // JSX (HTML) kısmını da 'loading' state'ini kullanacak şekilde güncelleyelim.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Giri\\u015F Yap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-posta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\u015Eifre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        disabled: loading,\n        children: loading ? \"Giriş Yapılıyor...\" : \"Giriş Yap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hesab\\u0131n yok mu? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Kay\\u0131t Ol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"H5SEsqUKGsvRU5w/7dxDfZrAxrw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","Link","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","response","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","body","JSON","stringify","data","json","ok","Error","access_token","user","localStorage","setItem","is_admin","err","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/erayt/Documents/GitHub/kurs-kay-t/frontend/src/components/Auth/LoginForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n// axios importuna artık ihtiyacımız yok.\r\n// AuthContext yerine localStorage kullanacağımız için onu da kaldırıyoruz.\r\nimport \"./Login.css\";\r\n\r\nfunction LoginForm() {\r\n  // State'ler aynı kalıyor, bir de yükleme durumu ekleyelim\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false); // Kullanıcı deneyimi için\r\n  const navigate = useNavigate();\r\n\r\n  // loginUser fonksiyonuna artık ihtiyacımız yok.\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      // 1. ADIM: fetch ile isteği gönderiyoruz.\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/auth/login`,\r\n        {\r\n          method: \"POST\", // Metodun POST olduğunu belirtiyoruz.\r\n          headers: {\r\n            // Gönderdiğimiz verinin JSON olduğunu ve cevap olarak JSON beklediğimizi belirtiyoruz.\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          // Göndereceğimiz JavaScript objesini JSON string'ine çeviriyoruz.\r\n          body: JSON.stringify({\r\n            email,\r\n            password,\r\n          }),\r\n        }\r\n      );\r\n\r\n      // 2. ADIM: Gelen cevabı JSON formatına çeviriyoruz.\r\n      const data = await response.json();\r\n\r\n      // 3. ADIM: Başarısız istekleri manuel olarak kontrol ediyoruz.\r\n      if (!response.ok) {\r\n        // Backend'den gelen 'error' mesajını alıp hata olarak fırlatıyoruz.\r\n        throw new Error(data.error || \"Bir şeyler ters gitti.\");\r\n      }\r\n\r\n      // 4. ADIM: Gelen cevabı bizim backend'in formatına göre işliyoruz.\r\n      const { access_token, user } = data;\r\n\r\n      // 5. ADIM: Token'ı ve kullanıcıyı tarayıcı hafızasına (localStorage) kaydediyoruz.\r\n      localStorage.setItem(\"authToken\", access_token);\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n\r\n      // 6. ADIM: Kullanıcıyı rolüne göre doğru sayfaya yönlendiriyoruz.\r\n      // Bizim 'user' objemizde rol 'is_admin' (boolean) olarak tutuluyor.\r\n      if (user.is_admin) {\r\n        navigate(\"/admin\");\r\n      } else {\r\n        // Normal kullanıcıyı dersler sayfasına veya kendi paneline yönlendirebiliriz.\r\n        navigate(\"/courses\");\r\n      }\r\n    } catch (err) {\r\n      // Yukarıda fırlattığımız veya ağ hatası gibi başka bir hata olursa burada yakalanır.\r\n      setError(\r\n        err.message || \"Giriş başarısız. Lütfen bilgilerinizi kontrol edin.\"\r\n      );\r\n      console.error(\"Giriş hatası:\", err);\r\n    } finally {\r\n      setLoading(false); // İstek bitince (başarılı veya başarısız) yükleme durumunu kapat.\r\n    }\r\n  };\r\n\r\n  // JSX (HTML) kısmını da 'loading' state'ini kullanacak şekilde güncelleyelim.\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Giriş Yap</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">E-posta</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Şifre</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn\" disabled={loading}>\r\n          {loading ? \"Giriş Yapılıyor...\" : \"Giriş Yap\"}\r\n        </button>\r\n      </form>\r\n      <div className=\"form-footer\">\r\n        <p>\r\n          Hesabın yok mu? <Link to=\"/register\">Kayıt Ol</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}